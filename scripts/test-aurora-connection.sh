#!/bin/bash

# Script de diagn√≥stico para conexi√≥n Aurora
# Uso: ./test-aurora-connection.sh

# Tu endpoint Aurora
ENDPOINT="zititex-aurora-cluster.cluster-cjiwim4msvqt.us-east-2.rds.amazonaws.com"
PORT="3306"

echo "=================================="
echo "üîç DIAGN√ìSTICO AURORA CONNECTION"
echo "=================================="
echo ""

# 1. Tu IP p√∫blica
echo "1Ô∏è‚É£  Tu IP p√∫blica:"
MY_IP=$(curl -s ifconfig.me)
echo "   ‚úÖ $MY_IP"
echo "   Esta IP debe estar en el Security Group de Aurora"
echo ""

# 2. Test DNS resolution
echo "2Ô∏è‚É£  Resolviendo DNS del endpoint:"
echo "   Endpoint: $ENDPOINT"
RESOLVED_IP=$(nslookup $ENDPOINT 2>/dev/null | grep "Address:" | tail -1 | awk '{print $2}')
if [ -n "$RESOLVED_IP" ]; then
    echo "   ‚úÖ DNS resuelve a: $RESOLVED_IP"
else
    echo "   ‚ùå No se pudo resolver DNS"
fi
echo ""

# 3. Test conectividad TCP al puerto 3306
echo "3Ô∏è‚É£  Test conectividad al puerto $PORT:"
timeout 5 bash -c "cat < /dev/null > /dev/tcp/$ENDPOINT/$PORT" 2>/dev/null
if [ $? -eq 0 ]; then
    echo "   ‚úÖ Puerto $PORT ACCESIBLE - Puedes conectarte"
else
    echo "   ‚ùå Puerto $PORT BLOQUEADO"
    echo ""
    echo "   üî¥ PROBLEMA IDENTIFICADO:"
    echo "      El puerto est√° bloqueado. Causas posibles:"
    echo "      1. Security Group NO tiene tu IP ($MY_IP)"
    echo "      2. Public Access est√° deshabilitado"
    echo "      3. Firewall corporativo/ISP bloqueando"
fi
echo ""

# 4. Test alternativo con nc (si est√° disponible)
if command -v nc &> /dev/null; then
    echo "4Ô∏è‚É£  Test alternativo con netcat:"
    nc -z -w 5 $ENDPOINT $PORT 2>/dev/null
    if [ $? -eq 0 ]; then
        echo "   ‚úÖ Netcat confirma: Puerto accesible"
    else
        echo "   ‚ùå Netcat confirma: Puerto bloqueado"
    fi
    echo ""
fi

# 5. Instrucciones de soluci√≥n
echo "=================================="
echo "üìã INSTRUCCIONES DE SOLUCI√ìN"
echo "=================================="
echo ""
echo "Si el puerto est√° BLOQUEADO, sigue estos pasos:"
echo ""
echo "üîß PASO 1: Ve a AWS Console ‚Üí RDS ‚Üí Databases"
echo "   - Clic en: zititex-aurora-cluster"
echo "   - Tab: Connectivity & security"
echo "   - Anota el Security Group ID"
echo ""
echo "üîß PASO 2: Ve a VPC ‚Üí Security Groups"
echo "   - Busca el Security Group de Aurora"
echo "   - Tab: Inbound rules ‚Üí Edit inbound rules"
echo ""
echo "üîß PASO 3: Agrega esta regla:"
echo ""
echo "   OPCI√ìN A - Solo tu IP (Recomendado):"
echo "   Type: MySQL/Aurora"
echo "   Port: 3306"
echo "   Source: $MY_IP/32"
echo "   Description: My development machine"
echo ""
echo "   OPCI√ìN B - Cualquier IP (‚ö†Ô∏è Solo desarrollo):"
echo "   Type: MySQL/Aurora"
echo "   Port: 3306"
echo "   Source: 0.0.0.0/0"
echo "   Description: Public access from internet (‚ö†Ô∏è Development only)"
echo ""
echo "üîß PASO 4: Save rules y espera 30 segundos"
echo ""
echo "üîß PASO 5: Verifica Public Access"
echo "   RDS ‚Üí Databases ‚Üí Cluster ‚Üí Connectivity & security"
echo "   Publicly accessible debe ser: Yes"
echo "   Si es No ‚Üí Modify ‚Üí Public access: Yes ‚Üí Apply immediately"
echo ""
echo "‚ö†Ô∏è  ADVERTENCIA: 0.0.0.0/0 permite acceso desde cualquier IP."
echo "   Aseg√∫rate de tener autenticaci√≥n fuerte y no usar en producci√≥n."
echo ""
echo "=================================="
echo "‚úÖ Despu√©s de hacer los cambios, ejecuta este script otra vez"
echo "=================================="

